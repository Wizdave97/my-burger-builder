{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js","store/actions/ordersActions.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onInitialize","token","userId","cleared","orders","Spinner","loading","error","id","Component","connect","state","auth","dispatch","queryParams","concat","axios","get","then","res","fetchedOrders","data","Object","objectSpread","status","type","value","catch","err","actions","withErrorHandler"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,gKCmCHC,EAhCD,SAAEC,GACZ,IAAMC,EAAc,GAEpB,IAAM,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,OAWX,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAYtB,EAAMuB,OAAQC,QAAS,uBCxBvEC,8LAIEC,KAAK1B,MAAM2B,aAAaD,KAAK1B,MAAM4B,MAAOF,KAAK1B,MAAM6B,qDAKpDH,KAAK1B,MAAM8B,SAASJ,KAAK1B,MAAM2B,aAAaD,KAAK1B,MAAM4B,wCAG1D,IAAIG,EAAOtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,MAkBT,OAjBGN,KAAK1B,MAAMiC,UAAYP,KAAK1B,MAAMkC,QACnCH,EAAOtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,OAGLN,KAAK1B,MAAMiC,SAAYP,KAAK1B,MAAMkC,QAASR,KAAK1B,MAAM+B,SACxDA,EACEtB,EAAAC,EAAAC,cAAA,WACKe,KAAK1B,MAAM+B,OAAOxB,IAAI,SAAAR,GAAK,OACxBU,EAAAC,EAAAC,cAACb,EAAD,CACIoB,IAAKnB,EAAMoC,GACXlC,YAAaF,EAAME,YACnBsB,MAAOxB,EAAMwB,YAMpBQ,SA9BIK,aA4CNC,sBAXS,SAAAC,GAAK,MAAI,CAC/BP,OAAOO,EAAMP,OAAOA,OACpBE,QAAQK,EAAMP,OAAOE,QACrBC,MAAMI,EAAMP,OAAOG,MACnBJ,QAAQQ,EAAMP,OAAOD,QACrBF,MAAMU,EAAMC,KAAKX,MACjBC,OAAOS,EAAMC,KAAKV,SAEO,SAAAW,GAAQ,MAAK,CACtCb,aAAc,SAACC,EAAMC,GAAP,OAAiBW,ECzCP,SAACZ,EAAMC,GAC/B,OAAO,SAAAW,GACL,IAAMC,EAAW,SAAAC,OAAUd,EAAV,+BAAAc,OAA6Cb,EAA7C,KACjBc,IAAMC,IAAN,eAAAF,OAAyBD,IACpBI,KAAK,SAAAC,GACF,IAAMC,EAAgB,GACtB,IAAK,IAAI7B,KAAO4B,EAAIE,KAChBD,EAAc5C,KAAd8C,OAAAC,EAAA,EAAAD,CAAA,GACOH,EAAIE,KAAK9B,GADhB,CAEIiB,GAAIjB,KAGZ,GAAgB,MAAb4B,EAAIK,OAAc,OAAOX,EAAS,CAACY,KAAK,sBAC3CZ,EAlBH,CACLY,KAiB4B,aAhB5BC,MAgByCN,MAGpCO,MAAM,SAAAC,GACLf,EAAS,CAACY,KAAK,yBDwBiBI,CAAmB5B,EAAMC,OAEpDQ,CAA4CoB,YAAiBhC,EAAOkB","file":"static/js/5.2e4ca5d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1Y16B\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/ordersActions';\nimport Order from '../../components/Order/Order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nclass Orders extends Component {\n\n\n    componentDidMount() {\n        this.props.onInitialize(this.props.token, this.props.userId)\n\n    }\n\n    componentDidUpdate(){\n      if(this.props.cleared) this.props.onInitialize(this.props.token)\n    }\n    render () {\n      let orders=<Spinner/>;\n        if(this.props.loading && !this.props.error){\n          orders=<Spinner/>\n        }\n\n        if(!this.props.loading && !this.props.error && this.props.orders){\n          orders=(\n            <div>\n                {this.props.orders.map(order => (\n                    <Order\n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n\n            </div>\n          );\n        }\n        return   orders\n    }\n}\nconst mapStateToProps = state =>({\n  orders:state.orders.orders,\n  loading:state.orders.loading,\n  error:state.orders.error,\n  cleared:state.orders.cleared,\n  token:state.auth.token,\n  userId:state.auth.userId\n})\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: (token,userId)=> dispatch(actions.initialize(token,userId))\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));\n","import axios from '../../axios-orders';\r\n\r\nconst saveOrders= (type,value)=>{\r\n  return {\r\n    type:type,\r\n    value:value\r\n  }\r\n}\r\nexport const initialize = (token,userId) =>{\r\n  return dispatch =>{\r\n    const queryParams=`?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    axios.get(`/orders.json${queryParams}`)\r\n        .then(res => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            if(res.status===401) return dispatch({type:'FETCH_ORDERS_FAIL'})\r\n            dispatch(saveOrders('INITIALIZE',fetchedOrders))\r\n\r\n        })\r\n        .catch(err => {\r\n          dispatch({type:'FETCH_ORDERS_FAIL'});\r\n        });\r\n  }\r\n}\r\n"],"sourceRoot":""}